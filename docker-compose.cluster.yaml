version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  server:
    build: .
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`localhost`)"
      - "traefik.http.services.server.loadbalancer.server.port=5001"
    depends_on:
      - redis
      - postgres
    volumes:
      - ./blnk.json:/blnk.json

  worker:
    build: .
    restart: on-failure
    entrypoint: ["./blnk", "workers"]
    depends_on:
      - redis
      - postgres
    volumes:
      - ./blnk.json:/blnk.json

  migration:
    build: .
    entrypoint: ["./blnk", "migrate", "up"]
    depends_on:
      - server
    volumes:
      - ./blnk.json:/blnk.json

  redis:
    image: redis:7.2.4
    ports:
      - "6379:6379"

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blnk
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_data:

